#####################
### graphics_test ###
#####################
'graphics_test': '#!/bin/bash -e

echo "==> entering step for loading chroot at $(date)"

time_load=$(date +%s)

if [ -z "$ROS_DISTRO" ]; then

ROS_DISTRO=$ros_distro

fi

if [ -z "$ros_distro" ]; then

ros_distro=$ROS_DISTRO

fi

new_basetgz=${ubuntu_distro}__${arch}__${ROS_DISTRO}

basetgz=@(USERNAME)__${new_basetgz}__${repository}

bagPath=@(STORAGE)/../bagFiles/

echo "Bag-File-Directory: $bagPath"

# Test if bagFiles-Path can be accessed

touch .writeTest; scp .writeTest $bagPath; writeResult=$?; rm .writeTest

if [ $writeResult -ne 0 ]; then 

   echo "BagPath cannot be written";

   exit 1;

fi

cat &gt; $WORKSPACE/env_vars.sh &lt;&lt;DELIM

JOBNAME=$JOB_NAME

ROSDISTRO=$ROS_DISTRO

REPOSITORY=$repository

UBUNTUDISTRO=$ubuntu_distro

ARCH=$arch

PIPELINE_REPOS_OWNER=@(PIPELINEREPOSOWNER)

JENKINS_MASTER=@(SERVERNAME)

JENKINS_USER=@(USERNAME)

JOBTYPE=@(JOB_TYPE_NAME)

export ROS_TEST_RESULTS_DIR=/tmp/test_repositories/src_repository/test_results

export BUILD_ID=$BUILD_ID

export BAGPATH=$bagPath

DELIM

echo "==> entering step for preparing graphical X environment at $(date)"

time_xenv=$(date +%s)

$WORKSPACE/jenkins_setup/scripts/graphicTest/host/prepareForChroot.bash $WORKSPACE

if [ $? != 0 ]; then

echo "Error: Preparation failed"

exit 1

fi

echo "==> entering step for proccessing inside chroot at $(date)"

time_chroot=$(date +%s)

if [ $arch == "i386" ]; then

    setarch i386 sudo pbuilder execute --basetgz $WORKSPACE/chroot_tarballs/in_use_on__@(SERVERNAME)/${basetgz} --bindmounts "$WORKSPACE /tmp/.X11-unix /tmp/nvidia" -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE

else

    sudo pbuilder execute --basetgz $WORKSPACE/chroot_tarballs/in_use_on__@(SERVERNAME)/${basetgz} --bindmounts "$WORKSPACE /tmp/.X11-unix /tmp/nvidia" -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE

fi

# change file ownership to "jenkins" user (files generated out of chroot have owner "root") (TODO: maybe in post-build step to make sure that also aborted jobs have correct ownership)

sudo chown -R $(id -un):$(id -gn) $WORKSPACE

echo "==> finished job at $(date)"

time_end=$(date +%s)

# duration steps: load, xenv, chroot, end

echo "durations:"

echo "loading chroot in             " $(date -d @`expr $time_xenv - $time_load` +%M:%S)

echo "preparing X environment       " $(date -d @`expr $time_chroot - $time_xenv` +%M:%S)
 
echo "processing inside chroot in   " $(date -d @`expr $time_end - $time_chroot` +%M:%S)

echo "total                         " $(date -d @`expr $time_end - $time_load` +%M:%S)

echo
'
